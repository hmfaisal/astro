"use strict";(self.webpackChunkastro_docs=self.webpackChunkastro_docs||[]).push([[993],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>y});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=n.createContext({}),p=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c=function(t){var e=p(t.components);return n.createElement(l.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),u=p(a),m=r,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return a?n.createElement(y,i(i({ref:e},c),{},{components:a})):n.createElement(y,i({ref:e},c))}));function y(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[u]="string"==typeof t?t:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},175:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:4},i="Data Mapping",s={unversionedId:"data-related/data-mapper",id:"data-related/data-mapper",title:"Data Mapping",description:"AstronautMapper class encapsulates the logic for converting dto models (AstronautDto, StatusDto, FlightDto) to entity models (AstronautEntity, StatusEntity, FlightEntity) . It also encapsulates the logic for converting entity models (AstronautEntity, StatusEntity, FlightEntity) to domain models (Astronaut, Status, Flight).",source:"@site/docs/data-related/data-mapper.md",sourceDirName:"data-related",slug:"/data-related/data-mapper",permalink:"/astro/data-related/data-mapper",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-related/data-mapper.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Local Data",permalink:"/astro/data-related/local-data-part"},next:{title:"Data Managing",permalink:"/astro/data-related/data-manage"}},l={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,r.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-mapping"},"Data Mapping"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AstronautMapper")," class encapsulates the logic for converting dto models (AstronautDto, StatusDto, FlightDto) to entity models (AstronautEntity, StatusEntity, FlightEntity) . It also encapsulates the logic for converting entity models (AstronautEntity, StatusEntity, FlightEntity) to domain models (Astronaut, Status, Flight)."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"mapAstronautDtoToEntity:")),"This method takes an AstronautDto object as input and maps it to an AstronautEntity object."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"mapAstronautEntityToDomain:"))," This method takes an AstronautEntity object as input and maps it to an Astronaut object.")))}d.isMDXComponent=!0}}]);